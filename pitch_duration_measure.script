########################################################################################################
##  
##  This script measures the duration (in msec) and F0 minimum, maximum, mean and range of a 
##  user-specified interval on a user-specified tier, looping through a user-specified directory. 
##  Pitch analysis time step, floor and ceiling values are user-specified. 
##  The results are printed to a text file named 'label_tier_pitch_duration' in the same directory.
##
##  Original script by Katherine Crosswhite, adapted by Leendert Plug.
##  Last edited July 2018
##
########################################################################################################


form Directory and sound file extension
   comment Specify the directory the script should run on by replacing '...' by the full path. Keep the final slash. 
   sentence Directory ...\
   comment Edit the file extension if your sound files are not .wav.
   sentence Extension .wav
   comment Specify the label of the interval you want to measure over.
   sentence Interval V
   comment Specify the number of the tier this interval is on.
   positive tiernumber 1
	comment Pitch analysis parameters
	positive Pitch_time_step 0.01
	positive Minimum_pitch_(Hz) 95
	positive Maximum_pitch_(Hz) 300
endform

##  The next bit deletes a previous version of the output file, if it exists.

filedelete 'directory$''interval$'_'tiernumber'_pitch_duration.txt

##  The next bit makes the header in the output file: it creates a variable called "header_row$", 
##  then writes that variable to the output file. Make sure this matches the analysis output
##  specified below.

header_row$ = "Filename 'tab$' Segment 'tab$' Duration 'tab$' Pitchmin 'tab$' Pitchmax 'tab$' Pitchmean 'tab$' Pitchrange 'newline$'"
header_row$ > 'directory$''interval$'_'tiernumber'_pitch_duration.txt

##  The next bit makes a list of all the sound files in the directory, and puts the number of
##  filenames into the variable "number_of_files".

Create Strings as file list...  list 'directory$'*.wav
number_files = Get number of strings

## The next bit sets up a "for" loop that will iterate once for every file in the list.

for j from 1 to number_files

## The next bit queries the file-list to get the first filename from it and reads that file in.

     select Strings list
     current_token$ = Get string... 'j'
     Read from file... 'directory$''current_token$'

## The next bit makes a variable called "object_name$" that will be equal to the filename minus 
## the ".aiff" extension.

     object_name$ = selected$ ("Sound")

## The next bit gets the corresponding TextGrid and reads it in.

     Read from file... 'directory$''object_name$'.TextGrid

     select Sound 'object_name$'
     To Pitch... pitch_time_step minimum_pitch maximum_pitch

## The next bit queries the TextGrid to find out how many intervals there are on the user-specified tier, 
## storing that number in a variable called "number_of_intervals". This is used to set up a "for" loop
## that will go through each of the intervals and measure it. You can do this for every interval that 
## has a non-null label (the first line) or for an interval with a specific label (here "V", second line).

     select TextGrid 'object_name$'
     number_of_intervals = Get number of intervals... tiernumber
     for b from 1 to number_of_intervals
         select TextGrid 'object_name$'
          label$ = Get label of interval... tiernumber 'b'
 
          if label$ = interval$
 
## The next bit does the actual measurements and any subsequent calculations.

        start = Get starting point... tiernumber 'b'
        end = Get end point... tiernumber 'b'
        dur = (end - start) * 1000

        select Pitch 'object_name$'
	pitchmin = Get minimum: start, end, "Hertz", "Parabolic"
	pitchmax = Get maximum: start, end, "Hertz", "Parabolic"
	pitchmean = Get mean: start, end, "Hertz"
	pitchrange = pitchmax - pitchmin

## Once all the measurements have been done, the results should be appended to the output file the script
## has created. 

            fileappend "'directory$''interval$'_'tiernumber'_pitch_duration.txt" 'object_name$''tab$''label$''tab$''dur''tab$''pitchmin''tab$''pitchmax''tab$''pitchmean''tab$''pitchrange''newline$'
 
         endif
     endfor

## The next bit makes sure the analysis is repeated for each file in the list, removes objects 
## after each analysis, and finally ends the "for" loop. 

     select all
     minus Strings list
     Remove
endfor

## The next bit tidies up and prints a final message.

select all
Remove
clearinfo
print All done.

## end of script
